% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/species_mix-class.R
\name{species_mix.simulate}
\alias{species_mix.simulate}
\title{Simulate species mix data for model fitting.}
\usage{
species_mix.simulate(archetype_formula, species_formula, dat,
  offset = NULL, n_mixtures = 3, alpha = NULL, beta = NULL,
  gamma = NULL, theta = NULL, distribution = "bernoulli")
}
\arguments{
\item{archetype_formula}{formula to simulate species_mix data, needs to have
the format: cbind(spp1,spp2,spp3,...,sppN)~1 + x1 + x2}

\item{species_formula}{formula to simulate species_mix species-specific
responses, e.g: ~1}

\item{dat}{a matrix of variables to simulate data from.}

\item{n_mixtures}{number of groups to simulate.}

\item{alpha}{coefficents for each species archetype. vector S long.}

\item{beta}{coefficents for each species archetype. Matrix of G x number of
parameters. Each row is a different species archetype.}

\item{gamma}{coefficents for each species archetype. Matrix of S x number of
parameters. Each row is a different species archetype.}

\item{theta}{coefficents for the dispersion variables for negative_binomial
and gaussian distributions - should be number of species long}

\item{distribution}{Which statistical distribution to simulate data for.
'bernoulli', 'gaussian', 'ippm', 'negative_binomial' and 'poisson'.}
}
\description{
Simulate species mix data for model fitting.
}
\examples{
\dontrun{
archetype_formula <- stats::as.formula(paste0('cbind(',paste(paste0('spp',
1:20),collapse = ','),")~1+x1+x2"))
species_formula <- stats::as.formula(~1)
beta <- matrix(c(-3.6,0.5,
                 -0.9,1.0,
                  0.9,-2.9,
                  2.2,5.4),
                4,2,byrow=TRUE)
dat <- data.frame(y=rep(1,100),
                  x1=stats::runif(100,0,2.5),
                  x2=stats::rnorm(100,0,2.5))
simulated_data <- species_mix.simulate(archetype_formula,species_formula,
                                       dat, n_mixtures = 4, beta=beta,
                                       dist="bernoulli")
}
}
