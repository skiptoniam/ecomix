% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/species_mix-class.R
\name{species_mix.control}
\alias{species_mix.control}
\title{Controls for species_mix model.}
\usage{
species_mix.control(
  quiet = FALSE,
  cores = 1,
  init_method = "random2",
  init_sd = 1,
  minimum_sites_occurrence = 10,
  em_prefit = TRUE,
  em_steps = 5,
  em_refit = 2,
  em_reltol = reltol_fun,
  em_maxtau = 0.8,
  theta_range = c(0.001, 10),
  pen_param = 1.25,
  update_kappa = c(1, 0.5, 1),
  print_cpp_start_vals = FALSE,
  maxit_cpp = 1000,
  trace_cpp = 1,
  nreport_cpp = 10,
  abstol_cpp = sqrt(.Machine$double.eps),
  reltol_cpp = sqrt(.Machine$double.eps),
  conv_cpp = 1,
  printparams_cpp = 0,
  optimise_cpp = 1,
  loglOnly_cpp = 0,
  derivOnly_cpp = 0,
  getscores_cpp = 0,
  ...
)
}
\arguments{
\item{quiet}{Should any reporting be performed? Default is FALSE, for reporting.}

\item{cores}{The number of cores to use in fitting of species_mix models. These will be largely used to model the species-specific parameteres.}

\item{init_method}{The method to use for initialisation. The options are "random2", "kmeans", "kmed". The default uses random2, which is a kmeans with noise added to the cluster.}

\item{init_sd}{The amount of noise to add to the initailisation the default is 1.}

\item{minimum_sites_occurrence}{a integer which determins the number of minimum sites present for any species for it to be included in the initialisation step. This removes rare species from initial groupings. They are then included in the overall analysis.}

\item{em_prefit}{Logical if TRUE the model will run a slower EM algorithm fit to find starting values.}

\item{em_steps}{int Default is 3, the number of EM iterations to get to starting values.}

\item{em_refit}{int Default is 1, number of times to refit using EM.}

\item{em_reltol}{A function or value which gives the tolerance in the EM loglikeihood estimation.}

\item{em_maxtau}{A cap on the maximum value of the species' taus in the first E-step of the EM algorithm, not used for subsequent iterations.}

\item{theta_range}{Two positive values use as penalities for estimating the dispersion parameters (theta) in a negative_binomial SAM or PSAM.}

\item{pen_param}{A penality for the em fitting.}

\item{update_kappa}{Penalities for how fast parameters update during each EM step.}

\item{print_cpp_start_vals}{A call to check what parameter estimates are being passed to C++ for optimisation.}

\item{maxit_cpp}{The number of iterations to run in C++. Default is 1000.}

\item{trace_cpp}{Non-negative integer. If positive, tracing information on the progress of the optimization is produced. Higher values may produce more tracing information.}

\item{nreport_cpp}{The number of iterations to report the loglikelihood. Default is 10.}

\item{abstol_cpp}{Absolute tolerance. Defaults to 0 so the absolute convergence test is not used. If the objective function is known to be non-negative, the previous default of 1e-20 would be more appropriate.}

\item{reltol_cpp}{Relative convergence tolerance. The algorithm stops if it is unable to reduce the value by a factor of reltol * (abs(val) + reltol) at a step. Defaults to sqrt(.Machine$double.eps), typically about 1e-8.}

\item{conv_cpp}{Has the model convered previously.}

\item{printparams_cpp}{Print the parameter estimates within C++.}

\item{optimise_cpp}{Should optimisation for estimation occur? If TRUE (default) optimisation will occur. If FALSE no optimisation is performed.}

\item{loglOnly_cpp}{Should the log-likelihood be calculated? If TRUE (default) then log-likelihood is calculated and returned. If FALSE then the log-likelihood is not calculated for return.}

\item{derivOnly_cpp}{Should the scores be evaluated at the (final) parameter values. If TRUE (default) then they are calculated. If FALSE then they are not calculated.}

\item{getscores_cpp}{Return scores.}

\item{\dots}{Other control calls.}
}
\description{
Controls for species_mix model.
}
